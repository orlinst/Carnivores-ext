which(tree[[1]]$tip.label==sister))])
}
for (i in 1:length(tree))	{
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
tree <- treeF[1:10]
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
for (i in 1:length(tree))	{
tip <- "Conepatus_robustus"
sister <- "Conepatus_leuconotus"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
for (i in 1:length(tree))	{
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
tree <- treeF[1:10]
for (i in 1:length(tree))	{
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
for (i in 1:length(tree))	{
tip <- "Conepatus_robustus"
sister <- "Conepatus_leuconotus"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
tree[[1]]
tree <- treeF[1:10]
tree[[1]]
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
tree[[1]]
for (i in 1:length(tree))	{
tip <- "Conepatus_robustus"
sister <- "Conepatus_leuconotus"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
tree[[1]]
for (i in 1:length(tree))	{
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
tree[[1]]
clean <- clean.data(speciesE, tree)
clean
plot(clean$tree$UNTITLED)
plot(clean$tree$UNTITLED, cex = 0.8)
plot(clean$tree$UNTITLED, cex = 0.7)
tree < -treeF[1:10]
tree <- treeF[1:10]
for (i in 1:length(tree))	{
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
tree <- treeF[1:10]
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
tip <- "Conepatus_robustus"
sister <- "Conepatus_leuconotus"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
tip <- "Conepatus_robustus"
sister <- "Conepatus_leuconotus"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.3*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
tip <- "Conepatus_robustus"
sister <- "Conepatus_leuconotus"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=1*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
tip <- "Conepatus_robustus"
sister <- "Conepatus_leuconotus"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]))
}
grep(tree[[1]], "Felis")
grep("Felis" , tree[[1]])
grepl("Felis" , tree[[1]])
grepl("Felis" , tree[[2]])
grep("Felis" , tree[[2]])
which(grep("Felis" , tree[[2]]))
which(grep("Felis" , tree[[2]]))
which(grep("Felis" , tree[[2]]), value = TRUE)
grep("Felis" , tree[[2]]), value = TRUE)
grep("Felis" , tree[[2]], value = TRUE)
grep("Felis" , tree[1]$UNTITLED, value = TRUE)
grep("Felis" , tree[1]$UNTITLED$tip.label, value = TRUE)
grep("martes" , tree[1]$UNTITLED$tip.label, value = TRUE)
grep("Martes" , tree[1]$UNTITLED$tip.label, value = TRUE)
treeNew <- list()
class(treeNew) <- "multiPhylo"
for(ntrees in 1:length(tree)) {
assign(paste0("treeX", ntrees), tree[[ntrees]])
}
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
treeNew[i] <- c(bind.tip(get(paste0("treeX",i)),tip,where=which((get(paste0("treeX",i)))$tip.label==sister),
position=0.5*(get(paste0("treeX",i)))$edge.length[which((get(paste0("treeX",i)))$edge[,2]==
which((get(paste0("treeX",i)))$tip.label==sister))])) }
for(ntrees in 1:length(tree)) {
assign(paste0("treeX", ntrees), treeNew[[ntrees]])
}
for (i in 1:length(tree))	{
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
treeNew[i] <- c(bind.tip(get(paste0("treeX",i)),tip,where=which((get(paste0("treeX",i)))$tip.label==sister),
position=0.5*(get(paste0("treeX",i)))$edge.length[which((get(paste0("treeX",i)))$edge[,2]==
which((get(paste0("treeX",i)))$tip.label==sister))])) }
for(ntrees in 1:length(tree)) {
assign(paste0("treeX", ntrees), treeNew[[ntrees]])
}
for (i in 1:length(tree))	{
tip <- "Conepatus_robustus"
sister <- "Conepatus_leuconotus"
treeNew[i] <- c(bind.tip(get(paste0("treeX",i)),tip,where=which((get(paste0("treeX",i)))$tip.label==sister),
position=0.5*(get(paste0("treeX",i)))$edge.length[which((get(paste0("treeX",i)))$edge[,2]==
which((get(paste0("treeX",i)))$tip.label==sister))])) }
rm(list=ls(pattern="treeX"))
grep("Martes" , treeNew[1], value = TRUE)
grep("Martes" , treeNew[[1]]$tip.label, value = TRUE)
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]) }
tree <- treeF[1:10]
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))]) }
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))])) }
tree[[1]]$tip.label
grep("MArtes", tree[[1]]$tip.label, value = TRUE)
grep("Martes", tree[[1]]$tip.label, value = TRUE)
for (i in 1:length(tree))	{
tip <- "Conepatus_robustus"
sister <- "Conepatus_leuconotus"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))])) }
for (i in 1:length(tree))	{
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[1]]$tip.label==sister))])) }
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[i]]$tip.label==sister))]) }
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[i]]$tip.label==sister))]) }
tree <- treeF[1:10]
gc()
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[i]]$tip.label==sister))])) }
grep("Martes", tree[[1]]$tip.label, value = TRUE)
grep("Martes", tree[[7]]$tip.label, value = TRUE)
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[i]]$tip.label==sister))]))
tip <- "Conepatus_robustus"
sister <- "Conepatus_leuconotus"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[i]]$tip.label==sister))]))
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[i]]$tip.label==sister))])) }
grep("Martes", tree[[7]]$tip.label, value = TRUE)
tree <- treeF[1:10]
for (i in 1:length(tree))	{
tip <- "Martes_caurina"
sister <- "Martes_americana"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[i]]$tip.label==sister))]))
tip <- "Conepatus_robustus"
sister <- "Conepatus_leuconotus"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[i]]$tip.label==sister))]))
tip <- "Felis_lybica"
sister <- "Felis_silvestris"
tree[i] <- c(bind.tip(tree[[i]],tip,where=which(tree[[i]]$tip.label==sister),
position=0.5*tree[[i]]$edge.length[which(tree[[i]]$edge[,2]==
which(tree[[i]]$tip.label==sister))])) }
grep("Martes", tree[[7]]$tip.label, value = TRUE)
grep("Felis", tree[[7]]$tip.label, value = TRUE)
knitr::opts_chunk$set(echo = TRUE)
speciesE <- read.delim("speciesE.txt", header=T)
knitr::opts_chunk$set(echo = TRUE)
rownames(speciesE) <- speciesE$species_
michaud <- read.csv("D:/Dropbox/05. Github/Sydney/Data/raw/datasets misc/michaud/michaud.csv")
View(michaud)
knitr::opts_chunk$set(echo = TRUE)
tree <- read.nexus("CompletePhyCarn.nex")
require(phytools)
require(mulTree)
tree <- read.nexus("CompletePhyCarn.nex")
data_final <- read.delim("carn-ext.txt", header=T)
rownames(data_final) <- data_final$species_name
w <- match(data_final$species_name, michaud$Species)
w
data_final$brain.michauld <-michaud$Measured.brain.volume..ml.[w]
View(michaud)
View(data_final)
sum(data_final$brain.michauld) %in% michaul
sum(data_final$brain.michauld) %in% michaud$Measured.brain.volume..ml.
which(is.na(data_final$brain.michauld))
which(data_final$species_name = is.na(data_final$brain.michauld))
which(data_final$species_name, is.na(data_final$brain.michauld))
require(easystats)
require(psych)
data_filter(data_final, !is.na(species_name) & is.na(brain.michauld))
require(phytools)
require(mulTree)
tree <- read.nexus("CompletePhyCarn.nex")
data_final <- read.delim("carn-ext.txt", header=T)
rownames(data_final) <- data_final$species_name
michaud <- read.csv("D:/Dropbox/05. Github/Sydney/Data/raw/datasets misc/michaud/michaud.csv")
View(michaud)
w <- match(data_final$species_name, michaud$Species)
data_final$brain.michaud <- michaud$Measured.brain.volume..ml.[w]
data_filter(data_final, !is.na(species_name) & is.na(brain.michoud))
data_filter(data_final, !is.na(species_name) & is.na(brain.michaud))
sum(is.na(brain.michaud))
sum(is.na(data_final$brain.michaud))
View(data_final)
write.table(data_final, "carn-ext.txt", sep = "\t", row.names = FALSE)
View(data_final)
View(data_final)
data.pc <- data_final[,3:17]
rownames(data.pc) <- data_final$species_name
#Impute data.pc
require(mice)
imp <- mice(data.pc, 20, maxit = 100, method = c("pmm", "pmm", "logreg", "pmm", "pmm", "polyreg", "pmm", "pmm", "pmm", "polyreg", "pmm", "pmm", "pmm", "pmm", "pmm"))
sapply(data_finall, class)
sapply(data_final, class)
sapply(data.pc, class)
data_final$extant <- as.factor(data_final$extant)
data_final$loctype <- as.factor(data_final$loctype)
data_final$diet.cat <- as.factor(data_final$diet.cat)
data.pc <- data_final[,3:17]
rownames(data.pc) <- data_final$species_name
imp <- mice(data.pc, 20, maxit = 100, method = c("pmm", "pmm", "logreg", "pmm", "pmm", "polyreg", "pmm", "pmm", "pmm", "polyreg", "pmm", "pmm", "pmm", "pmm", "pmm"))
save(imp, file = "imp20x100.RData")
plot(imp)
densityplot(imp)
View(data_final)
data_final$brain.michaud <- log(data_final$brain.michaud)
normalize <- function(x, ...) {
return((x - min(x, ...)) /(max(x, ...) - min(x, ...)))
}
data_final$brain.michaud <- normalize(data_final$brain.michaud)
View(data_final)
data_final <- read.delim("carn-ext.txt", header=T)
rownames(data_final) <- data_final$species_name
data_final$extant <- as.factor(data_final$extant)
data_final$loctype <- as.factor(data_final$loctype)
data_final$diet.cat <- as.factor(data_final$diet.cat)
View(data_final)
data_final$brain.michaud <- log(data_final$brain.michaud)
View(data_final)
data_final$brain.michaud <- normalize(data_final$brain.michaud, na.rm = TRUE)
View(data_final)
write.table(speciesE, "carn-ext.txt", sep = "\t", row.names = FALSE)
write.table(data_final, "carn-ext.txt", sep = "\t", row.names = FALSE)
data.pc <- data_final[,3:17]
rownames(data.pc) <- data_final$species_name
imp <- mice(data.pc, 20, maxit = 100, method = c("pmm", "pmm", "logreg", "pmm", "pmm", "polyreg", "pmm", "pmm", "pmm", "polyreg", "pmm", "pmm", "pmm", "pmm", "pmm"))
save(imp, file = "imp20x100.RData")
stripplot(imp, pch = 20, cex = 1.2)
densityplot(imp)
regress.multi.impute1 <- function (multree, sets, model, num, alpha=0.05, btol.v=10, boot.v=0) {
rand = sample.int(1000, num)
to = length(rand)
a = 0 #counter for sig models
b = 0
z = matrix(ncol = length(colnames(dataX1)), nrow =sets*to)
total = sets*to
pb <- txtProgressBar(min = 0,      # Minimum value of the progress bar
max = total, # Maximum value of the progress bar
style = 3,    # Progress bar style (also available style = 1 and style = 2)
width = 50,   # Progress bar width. Defaults to getOption("width")
char = "=")   # Character used to create the bar
#z <- NULL
#z <- data.frame(matrix(ncol = 10, nrow = 10))
# gets the trees one by one, extracts the coeffs from the summary (as numeric), marks the sig p values
# (see print.pval fun) and prints them - progress is displayed
rand = sample.int(1000, num)
for (i in rand){
for (imps in 1:sets){
temptree <- multree[[i]]
s1 <- phyloglm(model, get(paste0("dataX", imps)), temptree, method = c("logistic_MPLE"), btol = btol.v, boot=boot.v)
b = b + 1
k = summary(s1)$coefficients[,3]
#print(k)
#print(length(k))
z[b, 1 : length(k)] = k
s2 <- as.data.frame(summary(s1)$coefficients[,"p.value"])
asd <- as.numeric(s2[[1]])
for(bar in 1:b) {
setTxtProgressBar(pb, bar)}
if(any(asd[-1]<alpha)){
#print.pval(asd[-1])
a = a+1
cat("\n", "---------------", "\n", " N Sig models:", a, " out of", b, "", round((a/b)*100, 2), "% " ,"\n", "Models left:", (sets*to)-b, "\n") }
#print(summary(s1)$coefficients[,4])
print (summary(s1))
#print(z)
}
}
close(pb)
cat(paste0("\n ==================== \n", " Total models: ", to, "x", sets, "=", to*sets, " (trees x imputed sets)",  "\n Significant: ", a, "\n ", "p<", alpha," in ", round((a/(to*sets))*100, 2), "% of the tested sets", "\n ==================== \n"))
zvalues <<- colMeans(abs(z), na.rm=T) # z or abs z?!
#convert z values to p
#out <- data.frame()
#cat(paste0("\n P-values \n"))
vars <- row.names(s2)
pval <- pt(zvalues[1:length(row.names(s2))], ((length(row.names(dataX1)) - (length(row.names(s2))))), lower.tail = FALSE)
out <- data.frame(vars, pval)
print(out)
}
regress.multi.impute1(tree, 5, extant ~ mass.g, 5)
for(imputedsets in 1: length(imp$imp[[1]])) {
#extract imputed sets in separate dfs
assign(paste0("dataX",imputedsets), complete(imp, imputedsets))
}
regress.multi.impute1(tree, 5, extant ~ mass.g, 5)
require(phylolm)
regress.multi.impute1(tree, 5, extant ~ mass.g, 5)
regress.multi.impute1(tree, 5, extant ~ mass.g + brain.michaud, 5)
regress.multi.impute1(tree, 5, extant ~ mass.g + brain, 5)
regress.multi.impute1(tree, 5, extant ~ mass.g + home.range + brain.michaud + loctype, 5)
regress.multi.impute1(tree, 20, extant ~ mass.g + home.range + brain.michaud + loctype, 5)
regress.multi.impute1(tree, 20, extant ~ mass.g + home.range + brain.michaud + loctype + pc + litter + diet.cat + longevity, 5)
regress.multi.impute1(tree, 20, extant ~ mass.g + home.range + brain.michaud + loctype + pc + litter + diet.cat + longevity, 5, btol.v=50)
regress.multi.impute1(tree, 20, extant ~ mass.g + home.range + brain.michaud + loctype + pc + litter + diet.cat + longevity, 5, btol.v=150)
regress.multi.impute1(tree, 20, extant ~ mass.g + home.range + brain.michaud + loctype + pc + litter + diet.cat, 5)
regress.multi.impute1(tree, 20, extant ~ home.range + brain.michaud + loctype, 5)
regress.multi.impute1(tree, 20, extant ~ home.range + brain.michaud + loctype, 10)
knitr::opts_chunk$set(echo = TRUE)
require(phytools)
require(mulTree)
tree <- read.nexus("CompletePhyCarn.nex")
data_final <- read.delim("carn-ext.txt", header=T)
rownames(data_final) <- data_final$species_name
sum(data_final$extant == 0)
114-19
19/114*100
95/114*100
levels(data_final$loctype)
class(data_final$loctype)
data_final$extant <- as.factor(data_final$extant)
data_final$loctype <- as.factor(data_final$loctype)
data_final$diet.cat <- as.factor(data_final$diet.cat)
levels(data_final$loctype)
require(easystats)
require(psych)
multi.hist(data_final[,sapply(data_final, is.numeric)], global = F)
load("./imp20x100.Rdata")
stripplot(imp, pch = 20, cex = 1.2)
require(mice)
stripplot(imp, pch = 20, cex = 1.2)
stripplot(imp, pch = 20, cex = 1.2)
densityplot(imp)
s2 = read.delim('all_scats.txt')
s2[is.na(s2)] = 0
s2 = s2[,33:54]
s2 = t(t(s2) / colSums(s2))
s = read.delim('all_scats.txt')
sp = paste(s[,29],s[,30])
s = s[,33:54]
s[is.na(s)] = 0
s = s / rowSums(s)
d = matrix(nrow=nrow(s),ncol=6,dimnames=list(sp,c('vert','invert','frug','plant','aquatic','fungus')))
d[,1] = rowSums(s[,1:4])
d[,2] = rowSums(s[,7:12])
d[,3] = rowSums(s[,14:17])
d[,4] = rowSums(s[,18:20])
d[,5] = rowSums(s[,c(5,6,13)])
d[,6] = rowSums(s[,21:22])
plot(hclust(dist(d)),labels=sp,cex=0.5)
k = kmeans(d,centers=5)$clust
sort(k)
v = array()
for (i in 1:20)	{
v[i] = (kmeans(d,centers=i)$tot.withinss / kmeans(d,centers=i)$totss)
}
plot(v,type='l')
barplot(t(d[order(k),]),col=hsv(h=0:5 / 6))
describe_distribution(speciesE)
describe_distribution(data_final)
require(naniar)
vis_miss(data_final)
summary(data_final$loctype)
is.na(data_final$loctype)
is.na(data_final$diet.cat)
sum(is.na(data_final$diet.cat))
