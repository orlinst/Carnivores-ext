knitr::opts_chunk$set(echo = TRUE)
speciesE <- read.delim("speciesE.txt", header=T)
require(phytools
)
tree <- read.nexus("CompletePhyCarn.nex")
fastBM(tree)
fastBM(tree[[1]])
a <- fastBM(tree[[1]])
phylosig(tree,a,method="lambda",test=TRUE)
phylosig(tree[[1]],a,method="lambda",test=TRUE)
fastBM(tree[[1]])
phylosig(tree[[1]],a,method="lambda",test=TRUE)
phylosig(tree[[1]],speciesE$mass.g,method="lambda",test=TRUE)
phylosig(tree[[2]],speciesE$mass.g,method="lambda",test=TRUE)
clean <- clean.data(data_final, tree)
require(mulTree)
clean <- clean.data(data_final, tree)
clean <- clean.data(data_speciesE, tree)
clean <- clean.data(speciesE, tree)
tree <- clean$tree
tree1 <- clean$tree[[2]]
data <- clean$data
require(phytools)
require(mulTree)
tree <- read.nexus("CompletePhyCarn.nex")
data_final <- read.delim("carn-ext.txt", header=T)
rownames(data_final) <- data_final$species_name
data_final$extant <- as.factor(data_final$extant)
data_final$loctype <- as.factor(data_final$loctype)
data_final$diet.cat <- as.factor(data_final$diet.cat)
clean <- clean.data(data_final, tree)
tree <- clean$tree
tree1 <- clean$tree[[2]]
data <- clean$data
phylosig(tree,data$mass.g,method="lambda",test=TRUE)
phylosig(tree1,data$mass.g,method="lambda",test=TRUE)
phylosig(tree1,data$brain,method="lambda",test=TRUE)
phylosig(tree1,data$loctype,method="lambda",test=TRUE)
phylosig(tree1,data$litter,method="lambda",test=TRUE)
phylosig(tree1,data$home.range,method="lambda",test=TRUE)
phylosig(tree1,data$abundance,method="lambda",test=TRUE)
phylosig(tree1,data$abundance,method="kappa",test=TRUE)
phylosig(tree1,data$abundance,method="kapa",test=TRUE)
phylosig(tree1,data$abundance,method="K",test=TRUE)
phylosig(tree1,data$mass.g,method="K",test=TRUE)
phylosig(tree1,data$mass.g,method="lambda",test=TRUE)
plot(tree1)
install.packages(c("adegenet", "aplot", "bayestestR", "brew", "brms", "classInt", "cli", "commonmark", "correlation", "cpp11", "crayon", "curl", "data.table", "datawizard", "devtools", "digest", "effectsize", "evaluate", "gert", "ggcorrplot", "ggforce", "ggraph", "ggridges", "ggsignif", "ggstatsplot", "graphlayouts", "igraph", "insight", "isoband", "jsonlite", "lifecycle", "lpSolve", "mnormt", "openssl", "parameters", "performance", "phangorn", "pracma", "projpred", "psych", "purrr", "ragg", "raster", "RcppArmadillo", "readr", "rlang", "rmarkdown", "see", "shinyWidgets", "spdep", "statsExpressions", "sys", "testthat", "tidyselect", "tinytex", "tseries", "vctrs", "vegan", "vroom", "wk", "xfun", "XML", "xts", "yaml", "zoo"))
install.packages(c("cli", "data.table", "devtools", "digest", "ggsignif", "ggstatsplot", "igraph", "mnormt", "purrr", "rlang", "vctrs", "xfun", "XML"))
install.packages(c("cli", "data.table", "devtools", "digest", "ggsignif", "ggstatsplot", "igraph", "mnormt", "purrr", "rlang", "vctrs", "xfun", "XML"))
install.packages(c("cli", "digest"))
install.packages("cli")
install.packages("cli")
install.packages("cli")
unlist("cli")
detach(cli)
detach("cli")
detach("package:cli", unload=TRUE)
detach("cli", unload=TRUE)
unloadNamespace("cli")
install.packages("cli")
install.packages(c("cli", "digest"))
install.packages(c("cli", "digest"))
knitr::opts_chunk$set(echo = TRUE)
require(psych)
speciesE <- read.delim("speciesE.txt", header=T)
rownames(speciesE) <- speciesE$species_name
#defining var class
speciesE$extant <- as.factor(speciesE$extant)
speciesE$loctype <- as.factor(speciesE$loctype)
speciesE$diet.cat <- as.factor(speciesE$diet.cat)
noonan_tables1 <- as.data.frame(noonan_tables1)
library(readxl)
noonan_tables1 <- read_excel("D:/Dropbox/05. Github/Sydney/Data/raw/datasets misc/noonan_tables1.xlsx")
View(noonan_tables1)
data <- noonan_tables1[, 5:15] #activity vars
View(data)
rownames(data) <- paste(noonan_tables1[,'Genus'], noonan_tables1[,'Species'])
noonan_tables1
data <- noonan_tables1[, 5:15] #activity vars
rownames(data) <- paste(noonan_tables1[,'Genus'], noonan_tables1[,'Species'])
class(noonan_tables1)
noonan_tables1 <- as.data.frame(noonan_tables1)
class(noonan_tables1)
class(data)
data <- noonan_tables1[, 5:15] #activity vars
class(data)
rownames(data) <- paste(noonan_tables1[,'Genus'], noonan_tables1[,'Species'])
pc <- princomp(na.omit(data))
pc_noonan <- pc$scores[,1]
names(pc_noonan) <- rownames(pc$scores)
summarey(pc)
summary(pc)
loadings(pc)
require(phytools)
require(mulTree)
tree <- read.nexus("CompletePhyCarn.nex")
data_final <- read.delim("carn-ext.txt", header=T)
rownames(data_final) <- data_final$species_name
require(mice)
require(narnia)
require(naniar)
miss_vis(data_final)
gg_miss_var(data_final)
vis_miss(data_final)
vis_miss(speciesE)
gg_miss_var(data_final, sort_miss = TRUE)
vis_miss(data_final, sort_miss = TRUE)
list.functions.in.file(filename, alphabetic = TRUE)
install.packages("NCmisc")
require("NCmisc")
list.functions.in.file(rstudioapi::getSourceEditorContext()$path, alphabetic = TRUE)
list.functions.in.file(filename, alphabetic = TRUE)
list.functions.in.file(code1, alphabetic = TRUE)
list.functions.in.file(code1.rmd, alphabetic = TRUE)
list.functions.in.file(code1.Rmd, alphabetic = TRUE)
setwd("D:/Dropbox/05. Github/Sydney/Analyses")
list.functions.in.file(code1.Rmd, alphabetic = TRUE)
list.functions.in.file("code1.Rmd", alphabetic = TRUE)
install.package("renv"")
install.package("renv")
install.packages("renv")
require("renv")
renv::dependencies
dependencies
renv::dependencies()
sessionInfo()
R --version
--version
version$version.string
version$
print(paste("R", getRversion()))
print("-------------")
for (package_name in sort(loadedNamespaces())) {
print(paste(package_name, packageVersion(package_name)))
}
require(phylolm)
print(paste("R", getRversion()))
print("-------------")
for (package_name in sort(loadedNamespaces())) {
print(paste(package_name, packageVersion(package_name)))
}
require(easystats)
require(phylolm)
print(paste("R", getRversion()))
print("-------------")
for (package_name in sort(loadedNamespaces())) {
print(paste(package_name, packageVersion(package_name)))
}
require(vegan)
print(paste("R", getRversion()))
print("-------------")
for (package_name in sort(loadedNamespaces())) {
print(paste(package_name, packageVersion(package_name)))
}
require(BAMMtools)
print(paste("R", getRversion()))
print("-------------")
for (package_name in sort(loadedNamespaces())) {
print(paste(package_name, packageVersion(package_name)))
}
require(ggtree)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
require(ggtree)
require(semTools)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
print(paste("R", getRversion()))
print("-------------")
for (package_name in sort(loadedNamespaces())) {
print(paste(package_name, packageVersion(package_name)))
}
View(data_final)
